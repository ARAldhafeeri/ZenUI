import io
from zenaura.client.page import Page 
from zenaura.client.hydrator import HydratorCompilerAdapter
from zenaura.client.app import App 

compiler_adapter = HydratorCompilerAdapter()

# create pyscript pydido template 
def template(content, meta_description=None, title=None, icon=None, pydide="https://pyscript.net/releases/2024.1.1/core.js", scripts=None):
  """
    This function generates the HTML structure of a Zenaura page.

    Args:
        content (str): The main content of the page, typically generated by compiling Zenaura components.
        meta_description (str, optional): A brief description of the page, used by search engines. Defaults to None.
        title (str, optional): The title of the page, displayed in the browser tab. Defaults to None.
        icon (str, optional): The URL of the favicon, a small icon associated with the page. Defaults to None.
        pydide (str, optional): The URL of the PyScript library, used for running Python code in the browser. Defaults to "https://pyscript.net/releases/2024.1.1/core.js".
        scripts (list, optional): An optional list of additional JavaScript scripts, CSS links to include in the page. Defaults to None.

    Returns:
        str: The complete HTML code as a string.
  """
  if scripts:
    s = io.StringIO()
    for script in scripts:
        s.write(script)
        s.write("\n")
    scripts = s.getvalue()
      
  return f"""

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="{icon}" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta name="title" content="{title}" />
    <meta http-equiv="refresh"  />
    <meta
      name="description"
      content="{meta_description}"
    />
    <script type="module" src="{pydide}"></script>
    {scripts if scripts else ""}
 
	<script type="py" src="./public/main.py" config="./public/config.json"></script>

    <link  rel="stylesheet" href="./public/main.css">

    <title>{title}</title>
    
  </head>
  <body>
    <div id="root">
        {content}
    </div>
  
  </body>

</html>
"""
class ZenauraServer:
    """
    A class for server-side rendering of Zenaura applications.

    This class provides methods for:

    * Hydrating Zenaura pages for server-side rendering.
    * Hydrating Zenaura apps for server-side rendering.
    * Generating the HTML structure of a Zenaura page.
    """

    @staticmethod
    def hydrate_page(page: Page, title="zenaura", meta_description="this app created with zenaura", icon="./public/favicon.ico", pydide="https://pyscript.net/releases/2024.1.1/core.js") -> str:
        """
        Hydrates a Zenaura page for server-side rendering.

        This method compiles the page's components using the HydratorCompilerAdapter and generates the HTML structure of the page.

        Args:
            page (Page): The Zenaura page to be hydrated.
            title (str, optional): The title of the page. Defaults to "zenaura".
            meta_description (str, optional): The meta description of the page. Defaults to "this app created with zenaura".
            icon (str, optional): The URL of the favicon. Defaults to "./public/favicon.ico".
            pydide (str, optional): The URL of the PyScript library. Defaults to "https://pyscript.net/releases/2024.1.1/core.js".

        Returns:
            str: The HTML structure of the hydrated page.
        """

        return template(compiler_adapter.hyd_comp_compile_page(page), meta_description, title, icon, pydide)

    @staticmethod
    def hydrate_app(app: App, title="zenaura", meta_description="this app created with zenaura", icon="./public/favicon.ico", pydide="https://pyscript.net/releases/2024.1.1/core.js", scripts=None) -> None:
        """
        Hydrates a Zenaura app for server-side rendering.

        This method renders all pages in the app, sets the page with path "/" to visible, and the rest to hidden. It then compiles the index.html file for server-side rendering.

        Args:
            app (App): The Zenaura app to be hydrated.
            title (str, optional): The title of the page. Defaults to "zenaura".
            meta_description (str, optional): The meta description of the page. Defaults to "this app created with zenaura".
            icon (str, optional): The URL of the favicon. Defaults to "./public/favicon.ico".
            pydide (str, optional): The URL of the PyScript library. Defaults to "https://pyscript.net/releases/2024.1.1/core.js".
            scripts (list, optional): An optional list of additional JavaScript scripts and CSS links to include in the page. Defaults to None.
        """

        pages = io.StringIO()

        # Render pages
        for path, route in app.routes.items():
            page, _, _, ssr = route
            if ssr:  # Ignore SSR pages
                continue
            if path == "/":  # Set / route to visible
                page_div = lambda comps: f'<div data-zenaura="{page.id}">{comps}</div>'
                pages.write(page_div(compiler_adapter.hyd_comp_compile_page(page)))
                continue
            # Pages other than / are set to hidden
            page_div = lambda comps: f'<div hidden data-zenaura="{page.id}">{comps}</div>'
            pages.write(page_div(compiler_adapter.hyd_comp_compile_page(page)))

        pages = pages.getvalue()

        # Overwrite in public dir
        with open("./public/index.html", "w") as file:
            file.write(template(pages, meta_description, title, icon, pydide, scripts))
